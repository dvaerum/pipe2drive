name: Run Unittests 
run-name: ${{ github.actor }} is running unittests ðŸš€
on: [push, pull_request]
jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        env:
          RUST_BACKTRACE: 1
          PIPE2DRIVE_CLIENT_SECRET_DATA: ${{ secrets.PIPE2DRIVE_CLIENT_SECRET_DATA }}
          PIPE2DRIVE_CLIENT_TOKEN_DATA: ${{ secrets.PIPE2DRIVE_CLIENT_TOKEN_DATA }}
        with:
          command: test
          args: -- --test-threads=1 --nocapture

      - uses: actions/upload-artifact@v3
        with:
          name: pipe2drive-config-folder
          path: ~/.config/pipe2drive

  snapcraft:
    needs: [unittest]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64, armhf]
    steps:
      - uses: actions/checkout@v3

      - uses: snapcore/action-build@v1
        id: snapcraft

      - uses: actions/upload-artifact@v3
        with:
          name: pipe2drive-_${{ matrix.arch }}_${{ github.ref_name }}.snap
          path: ${{ steps.snapcraft.outputs.snap }}

      - run: |
          echo '=== Look for certificates file: Begin ==='
          find /var/ssl /usr/share/ssl /usr/local/ssl /usr/local/openssl /usr/local/etc/openssl /usr/local/share /usr/lib/ssl /usr/ssl /etc/openssl /etc/pki/ca-trust/extracted/pem /etc/pki/tls /etc/ssl /etc/certs /opt/etc/ssl /data/data/com.termux/files/usr/etc/tls /boot/system/data/ssl -type f \( -name cert.pem -o -name certs.pem -o -name ca-bundle.pem -o -name cacert.pem -o -name ca-certificates.crt -o -name ca-certificates.crt -o -name ca-root-nss.crt -o -name ca-bundle.crt -o -name CARootCertificates.pem -o -name tls-ca-bundle.pem \) -ls
          echo '=== Look for certificates file: End ==='

      - name: Test that the snap works
        env:
          RUST_BACKTRACE: 1
          PIPE2DRIVE_CLIENT_SECRET_DATA: ${{ secrets.PIPE2DRIVE_CLIENT_SECRET_DATA }}
          PIPE2DRIVE_CLIENT_TOKEN_DATA: ${{ secrets.PIPE2DRIVE_CLIENT_TOKEN_DATA }}
        run: |
          sudo snap install --dangerous ${{ steps.snapcraft.outputs.snap }}
          echo '=== Environment Variables in Snap: Begin ==='
          echo env | snap run --shell pipe2drive | sort
          echo '=== Environment Variables in Snap: End ==='
          echo '=== Look for certificates file: Begin ==='
          echo find /var/ssl /usr/share/ssl /usr/local/ssl /usr/local/openssl /usr/local/etc/openssl /usr/local/share /usr/lib/ssl /usr/ssl /etc/openssl /etc/pki/ca-trust/extracted/pem /etc/pki/tls /etc/ssl /etc/certs /opt/etc/ssl /data/data/com.termux/files/usr/etc/tls /boot/system/data/ssl -type f '\( -name cert.pem -o -name certs.pem -o -name ca-bundle.pem -o -name cacert.pem -o -name ca-certificates.crt -o -name ca-certificates.crt -o -name ca-root-nss.crt -o -name ca-bundle.crt -o -name CARootCertificates.pem -o -name tls-ca-bundle.pem \)' -ls | snap run --shell pipe2drive
          echo '=== Look for certificates file: End ==='
          snap run pipe2drive --version
          snap run pipe2drive upload --replace --size 100mib --filename testing_snap_build_${{ matrix.arch }}.txt --testing --testing-size 90mib
          snap run pipe2drive upload --replace --size 100mib --filename testing_snap_build_${{ matrix.arch }}_encrypted.txt --testing --testing-size 90mib

      - name: Upload Snap (edge)
        if: ${{ github.ref_name == 'dev' }}
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
        with:
          snap: ${{ steps.snapcraft.outputs.snap }}
          release: edge

  merge-dev-to-main-branch:
    # needs: [unittest,snapcraft]
    if : ${{ github.ref_name == 'dev' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run read-yaml action
        id: snapcraft-version
        uses: jbutcher5/read-yaml@main
        with:
          file: './snap/snapcraft.yaml'
          key-path: '["version"]'

      - uses: dangdennis/toml-action@main
        id: cargo-version
        with:
          file: 'Cargo.toml'
          field: 'package.version'

      - name: Find Tag
        id: get-tag-if-any
        uses: digital-ai/query-tag-action@v2
        with:
          include: 'v*'
          exclude: '*-rc*'
          commit-ish: 'HEAD'
          exact-match: 'true'

      - run: |
          echo "snapcraft version: ${{ steps.snapcraft-version.outputs.data }}"
          echo "cargo version: ${{ steps.cargo-version.outputs.value }}"
          echo "tag: ${{ steps.get-tag-if-any.outputs.tag }}"
          echo "github ref type: ${{ github.ref_type }}"
          echo "github ref name: ${{ github.ref_name }}"

      - name: Make pull request to merge dev to main
        if: >-
          ${{ steps.get-tag-if-any.outputs.tag == format('v{0}', steps.snapcraft-version.outputs.data) && 
              steps.get-tag-if-any.outputs.tag == format('v{0}', steps.cargo-version.outputs.value) }}
        uses: peter-evans/create-pull-request@v3
        with:
          base: ${{ github.ref_name }}
          title: Merge dev to main and bump the version to ${{ steps.get-tag-if-any.outputs.tag }}"
          body: |
            This pull request was automatically created by GitHub Action.
            This pull request will merge dev to main and bump the version to ${{ steps.get-tag-if-any.outputs.tag }}.
          labels: |
            new-release
          token: ${{ secrets.GITHUB_TOKEN }}
